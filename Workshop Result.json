{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "enable": false,
        "hide": false,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 1,
  "id": 152,
  "links": [
    {
      "icon": "external link",
      "keepTime": true,
      "tags": [
        "s4dbsoverview"
      ],
      "type": "dashboards"
    },
    {
      "asDropdown": true,
      "icon": "external link",
      "includeVars": true,
      "keepTime": true,
      "tags": [
        "overview"
      ],
      "title": "Overview Dashboards",
      "type": "dashboards"
    },
    {
      "asDropdown": true,
      "icon": "external link",
      "includeVars": true,
      "keepTime": true,
      "tags": [
        "os",
        "visible"
      ],
      "title": "OS Dashboards",
      "type": "dashboards"
    }
  ],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "$DataSourceVariable"
      },
      "description": "Total CPU Usage. Stacked Trendchart. 100% means 100% overall all cores available",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".*"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "Show CPU Details",
                    "url": "d/ThSCyDbWz/cpu?orgId=1&${__url_time_range}&${__all_variables}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Total"
            },
            "properties": [
              {
                "id": "custom.lineStyle",
                "value": {
                  "dash": [
                    10,
                    10
                  ],
                  "fill": "dash"
                }
              },
              {
                "id": "custom.fillOpacity",
                "value": 0
              },
              {
                "id": "custom.lineWidth",
                "value": 2
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "text",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.stacking",
                "value": {
                  "group": "A",
                  "mode": "none"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 0,
        "y": 0
      },
      "id": 2,
      "interval": "1m",
      "links": [
        {
          "title": "Show CPU Details",
          "url": "d/ThSCyDbWz/cpu?orgId=1&${__url_time_range}&${__all_variables}"
        }
      ],
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true,
          "sortBy": "Mean",
          "sortDesc": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "10.2.3",
      "targets": [
        {
          "datasource": {
            "uid": "$DataSourceVariable"
          },
          "editorMode": "code",
          "format": "time_series",
          "group": [
            {
              "params": [
                "$__interval",
                "none"
              ],
              "type": "time"
            },
            {
              "params": [
                "entity"
              ],
              "type": "column"
            }
          ],
          "metricColumn": "entity",
          "rawQuery": true,
          "rawSql": "SELECT\n  $__timeGroupAlias(snapshot_time,$__interval),\n  hostname,\n  1 - (CASE WHEN max(val4) >= lag(max(val4)) OVER (PARTITION BY entity ORDER BY $__timeGroup(snapshot_time,$__interval)) THEN max(val4) - lag(max(val4)) OVER (PARTITION BY entity ORDER BY $__timeGroup(snapshot_time,$__interval)) WHEN lag(max(val4)) OVER (PARTITION BY entity ORDER BY $__timeGroup(snapshot_time,$__interval)) IS NULL THEN NULL ELSE max(val4) END)/cast (\n    CASE\n      WHEN max(val1 + val2 + val3 + val4 + val5 + val6 + val7) >= lag(max(val1 + val2 + val3 + val4 + val5 + val6 + val7)) OVER (\n        PARTITION BY entity\n        ORDER BY\n          $__timeGroup(snapshot_time,$__interval)\n      ) THEN max(val1 + val2 + val3 + val4 + val5 + val6 + val7) - lag(max(val1 + val2 + val3 + val4 + val5 + val6 + val7)) OVER (\n        PARTITION BY entity\n        ORDER BY\n          $__timeGroup(snapshot_time,$__interval)\n      )\n      WHEN lag(max(val1 + val2 + val3 + val4 + val5 + val6 + val7)) OVER (\n        PARTITION BY entity\n        ORDER BY\n          $__timeGroup(snapshot_time,$__interval)\n      ) IS NULL THEN NULL\n      ELSE max(val1 + val2 + val3 + val4 + val5 + val6 + val7)\n    END\n  as decimal ) AS \"cpu_utilization_pct\"\nFROM spg_mon_os.v_proc_stat\nWHERE\n  $__timeFilter(snapshot_time) AND\n  entity LIKE 'cpu'\nGROUP BY 1,hostname, entity\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "val1"
                ],
                "type": "column"
              },
              {
                "params": [
                  "max"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "rate"
                ],
                "type": "window"
              },
              {
                "params": [
                  "user"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "val2"
                ],
                "type": "column"
              },
              {
                "params": [
                  "max"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "rate"
                ],
                "type": "window"
              },
              {
                "params": [
                  "nice"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "val3"
                ],
                "type": "column"
              },
              {
                "params": [
                  "max"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "rate"
                ],
                "type": "window"
              },
              {
                "params": [
                  "system"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "val4"
                ],
                "type": "column"
              },
              {
                "params": [
                  "max"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "rate"
                ],
                "type": "window"
              },
              {
                "params": [
                  "idle"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "val5"
                ],
                "type": "column"
              },
              {
                "params": [
                  "max"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "rate"
                ],
                "type": "window"
              },
              {
                "params": [
                  "io_wait"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "val6"
                ],
                "type": "column"
              },
              {
                "params": [
                  "max"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "rate"
                ],
                "type": "window"
              },
              {
                "params": [
                  "irq"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "val7"
                ],
                "type": "column"
              },
              {
                "params": [
                  "max"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "rate"
                ],
                "type": "window"
              },
              {
                "params": [
                  "soft_irq"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "spg_mon_os.v_proc_stat",
          "timeColumn": "snapshot_time",
          "timeColumnType": "timestamptz",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            },
            {
              "datatype": "text",
              "name": "",
              "params": [
                "display_name",
                "IN",
                "($HostPicker)"
              ],
              "type": "expression"
            },
            {
              "datatype": "varchar",
              "name": "",
              "params": [
                "entity",
                "LIKE",
                "'cpu'"
              ],
              "type": "expression"
            }
          ]
        }
      ],
      "title": "CPU Usage Overall",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "$DataSourceVariable"
      },
      "description": "system load averages; short->1min, mid->5min, long->15min\nRed dotted line is number of cores",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [
            {
              "title": "Show CPU Details",
              "url": "d/ThSCyDbWz/cpu?orgId=1&${__url_time_range}&${__all_variables}"
            }
          ],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "num_cores"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "num_cores"
            },
            "properties": [
              {
                "id": "custom.fillOpacity",
                "value": 0
              },
              {
                "id": "custom.lineWidth",
                "value": 2
              },
              {
                "id": "custom.lineStyle",
                "value": {
                  "dash": [
                    10,
                    10
                  ],
                  "fill": "dash"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 0
      },
      "id": 7,
      "interval": "1m",
      "links": [
        {
          "title": "Show CPU Details",
          "url": "d/ThSCyDbWz/cpu?orgId=1&${__url_time_range}&${__all_variables}"
        }
      ],
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "10.2.3",
      "targets": [
        {
          "datasource": {
            "uid": "$DataSourceVariable"
          },
          "editorMode": "code",
          "format": "time_series",
          "group": [
            {
              "params": [
                "$__interval",
                "none"
              ],
              "type": "time"
            }
          ],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  $__timeGroupAlias(snapshot_time,$__interval),\n  hostname,\n  max(load5) AS \"load5\"\nFROM spg_mon_os.v_proc_loadavg\nWHERE\n  $__timeFilter(snapshot_time)\nGROUP BY 1,hostname\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "load1"
                ],
                "type": "column"
              },
              {
                "params": [
                  "max"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "load short"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "load5"
                ],
                "type": "column"
              },
              {
                "params": [
                  "max"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "load mid"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "load15"
                ],
                "type": "column"
              },
              {
                "params": [
                  "max"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "load long"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "spg_mon_os.v_proc_loadavg",
          "timeColumn": "snapshot_time",
          "timeColumnType": "timestamptz",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            },
            {
              "datatype": "varchar",
              "name": "",
              "params": [
                "display_name",
                "=",
                "'$HostPicker'"
              ],
              "type": "expression"
            }
          ]
        }
      ],
      "title": "Systemload",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DataSourceVariable}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/.*per_write/"
            },
            "properties": [
              {
                "id": "custom.transform",
                "value": "negative-Y"
              }
            ]
          },
          {
            "matcher": {
              "id": "byValue",
              "options": {
                "op": "gte",
                "reducer": "allIsZero",
                "value": 0
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true,
                  "tooltip": true,
                  "viz": false
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byValue",
              "options": {
                "op": "gte",
                "reducer": "allIsNull",
                "value": 0
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true,
                  "tooltip": true,
                  "viz": false
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 7
      },
      "id": 16,
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "lastNotNull",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true,
          "sortBy": "Mean",
          "sortDesc": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "10.2.3",
      "targets": [
        {
          "datasource": {
            "uid": "${DataSourceVariable}"
          },
          "editorMode": "code",
          "format": "time_series",
          "group": [
            {
              "params": [
                "$__interval",
                "none"
              ],
              "type": "time"
            }
          ],
          "metricColumn": "display_name||' - '||device",
          "rawQuery": true,
          "rawSql": "SELECT\n  $__timeGroupAlias(snapshot_time,$__interval),\n  hostname,device,\n  ((CASE WHEN avg(time_spent_reading_ms) >= lag(avg(time_spent_reading_ms)) OVER (PARTITION BY display_name,device ORDER BY $__timeGroup(snapshot_time,$__interval)) THEN avg(time_spent_reading_ms) - lag(avg(time_spent_reading_ms)) OVER (PARTITION BY display_name,device ORDER BY $__timeGroup(snapshot_time,$__interval)) WHEN lag(avg(time_spent_reading_ms)) OVER (PARTITION BY display_name,device ORDER BY $__timeGroup(snapshot_time,$__interval)) IS NULL THEN NULL ELSE avg(time_spent_reading_ms) END)/extract(epoch from min(snapshot_time) - lag(min(snapshot_time)) OVER (PARTITION BY display_name,device ORDER BY $__timeGroup(snapshot_time,$__interval)))) --AS \"time_spent_reading_ms\",\n  /\n  ((CASE WHEN avg(reads_total) > lag(avg(reads_total)) OVER (PARTITION BY display_name,device ORDER BY $__timeGroup(snapshot_time,$__interval)) THEN avg(reads_total) - lag(avg(reads_total)) OVER (PARTITION BY display_name,device ORDER BY $__timeGroup(snapshot_time,$__interval)) WHEN lag(avg(reads_total)) OVER (PARTITION BY display_name,device ORDER BY $__timeGroup(snapshot_time,$__interval)) IS NULL THEN NULL ELSE NULL END)/extract(epoch from min(snapshot_time) - lag(min(snapshot_time)) OVER (PARTITION BY display_name,device ORDER BY $__timeGroup(snapshot_time,$__interval)))) --AS \"reads_total\",\n  as time_per_read\nFROM spg_mon_os.v_proc_diskstats\nWHERE\n  $__timeFilter(snapshot_time)\n  and time_spent_doing_io_ms > 0\nGROUP BY 1,2,3,display_name\nORDER BY 1,2,3",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "time_spent_reading_ms"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "rate"
                ],
                "type": "window"
              },
              {
                "params": [
                  "time_spent_reading_ms"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "reads_total"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "rate"
                ],
                "type": "window"
              },
              {
                "params": [
                  "reads_total"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "time_spent_writing_ms"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "rate"
                ],
                "type": "window"
              },
              {
                "params": [
                  "time_spent_writing_ms"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "writes_compl"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "rate"
                ],
                "type": "window"
              },
              {
                "params": [
                  "writes_compl"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "spg_mon_os.v_proc_diskstats",
          "timeColumn": "snapshot_time",
          "timeColumnType": "timestamptz",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            },
            {
              "datatype": "varchar",
              "name": "",
              "params": [
                "display_name",
                "=",
                "'$HostPicker'"
              ],
              "type": "expression"
            }
          ]
        }
      ],
      "title": "Time per Read per disk",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DataSourceVariable}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/.*per_write/"
            },
            "properties": []
          },
          {
            "matcher": {
              "id": "byValue",
              "options": {
                "op": "gte",
                "reducer": "allIsZero",
                "value": 0
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true,
                  "tooltip": true,
                  "viz": false
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byValue",
              "options": {
                "op": "gte",
                "reducer": "allIsNull",
                "value": 0
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true,
                  "tooltip": true,
                  "viz": false
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 7
      },
      "id": 23,
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "lastNotNull",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true,
          "sortBy": "Mean",
          "sortDesc": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "10.2.3",
      "targets": [
        {
          "datasource": {
            "uid": "${DataSourceVariable}"
          },
          "editorMode": "code",
          "format": "time_series",
          "group": [
            {
              "params": [
                "$__interval",
                "none"
              ],
              "type": "time"
            }
          ],
          "metricColumn": "display_name||' - '||device",
          "rawQuery": true,
          "rawSql": "SELECT\n  $__timeGroupAlias(snapshot_time,$__interval),\n  hostname,device,\n  ((CASE WHEN avg(time_spent_writing_ms) >= lag(avg(time_spent_writing_ms)) OVER (PARTITION BY display_name,device ORDER BY $__timeGroup(snapshot_time,$__interval)) THEN avg(time_spent_writing_ms) - lag(avg(time_spent_writing_ms)) OVER (PARTITION BY display_name,device ORDER BY $__timeGroup(snapshot_time,$__interval)) WHEN lag(avg(time_spent_writing_ms)) OVER (PARTITION BY display_name,device ORDER BY $__timeGroup(snapshot_time,$__interval)) IS NULL THEN NULL ELSE avg(time_spent_writing_ms) END)/extract(epoch from min(snapshot_time) - lag(min(snapshot_time)) OVER (PARTITION BY display_name,device ORDER BY $__timeGroup(snapshot_time,$__interval)))) --AS \"time_spent_writing_ms\",\n  /\n  ((CASE WHEN avg(writes_compl) > lag(avg(writes_compl)) OVER (PARTITION BY display_name,device ORDER BY $__timeGroup(snapshot_time,$__interval)) THEN avg(writes_compl) - lag(avg(writes_compl)) OVER (PARTITION BY display_name,device ORDER BY $__timeGroup(snapshot_time,$__interval)) WHEN lag(avg(writes_compl)) OVER (PARTITION BY display_name,device ORDER BY $__timeGroup(snapshot_time,$__interval)) IS NULL THEN NULL ELSE NULL END)/extract(epoch from min(snapshot_time) - lag(min(snapshot_time)) OVER (PARTITION BY display_name,device ORDER BY $__timeGroup(snapshot_time,$__interval)))) --AS \"writes_compl\"\n  as time_per_write\nFROM spg_mon_os.v_proc_diskstats\nWHERE\n  $__timeFilter(snapshot_time)\n  and time_spent_doing_io_ms > 0\nGROUP BY 1,2,3,display_name\nORDER BY 1,2,3",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "time_spent_reading_ms"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "rate"
                ],
                "type": "window"
              },
              {
                "params": [
                  "time_spent_reading_ms"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "reads_total"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "rate"
                ],
                "type": "window"
              },
              {
                "params": [
                  "reads_total"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "time_spent_writing_ms"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "rate"
                ],
                "type": "window"
              },
              {
                "params": [
                  "time_spent_writing_ms"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "writes_compl"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "rate"
                ],
                "type": "window"
              },
              {
                "params": [
                  "writes_compl"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "spg_mon_os.v_proc_diskstats",
          "timeColumn": "snapshot_time",
          "timeColumnType": "timestamptz",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            },
            {
              "datatype": "varchar",
              "name": "",
              "params": [
                "display_name",
                "=",
                "'$HostPicker'"
              ],
              "type": "expression"
            }
          ]
        }
      ],
      "title": "Time per Write per disk",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DataSourceVariable}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 40,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 15
      },
      "id": 17,
      "interval": "1m",
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "lastNotNull",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "10.2.3",
      "targets": [
        {
          "datasource": {
            "uid": "${DataSourceVariable}"
          },
          "editorMode": "code",
          "format": "time_series",
          "group": [
            {
              "params": [
                "$__interval",
                "none"
              ],
              "type": "time"
            }
          ],
          "metricColumn": "datname",
          "rawQuery": true,
          "rawSql": "with delta as (\n  SELECT\n  $__timeGroupAlias(snapshot_time,$__interval),\n  display_name,hostname,datname,\n  (CASE WHEN max(blks_read) >= lag(max(blks_read)) OVER (order by $__timeGroup(snapshot_time,$__interval)) THEN max(blks_read) - lag(max(blks_read)) OVER (order by $__timeGroup(snapshot_time,$__interval)) WHEN lag(max(blks_read)) OVER (order by $__timeGroup(snapshot_time,$__interval)) IS NULL THEN NULL ELSE max(blks_read) END)/extract(epoch from min(snapshot_time) - lag(min(snapshot_time)) OVER (order by $__timeGroup(snapshot_time,$__interval))) AS \"blks_read\",\n  (CASE WHEN max(blks_hit) >= lag(max(blks_hit)) OVER (order by $__timeGroup(snapshot_time,$__interval)) THEN max(blks_hit) - lag(max(blks_hit)) OVER (order by $__timeGroup(snapshot_time,$__interval)) WHEN lag(max(blks_hit)) OVER (order by $__timeGroup(snapshot_time,$__interval)) IS NULL THEN NULL ELSE max(blks_hit) END)/extract(epoch from min(snapshot_time) - lag(min(snapshot_time)) OVER (order by $__timeGroup(snapshot_time,$__interval))) AS \"blks_hit\"\n  FROM spg_mon_pg.v_pg_stat_database\n  WHERE\n  $__timeFilter(snapshot_time)\n  GROUP BY 1,2,3,4\n)\nselect time,display_name,hostname,datname,blks_hit/(blks_hit+blks_read) as blks_hit_ratio from delta\nORDER BY 1,2",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "tup_fetched"
                ],
                "type": "column"
              },
              {
                "params": [
                  "max"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "rate"
                ],
                "type": "window"
              },
              {
                "params": [
                  "tup_fetched"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "tup_returned"
                ],
                "type": "column"
              },
              {
                "params": [
                  "max"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "rate"
                ],
                "type": "window"
              },
              {
                "params": [
                  "tup_returned"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "blks_read"
                ],
                "type": "column"
              },
              {
                "params": [
                  "max"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "rate"
                ],
                "type": "window"
              },
              {
                "params": [
                  "blks_read"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "spg_mon_pg.v_pg_stat_database",
          "timeColumn": "snapshot_time",
          "timeColumnType": "timestamptz",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            },
            {
              "datatype": "text",
              "name": "",
              "params": [
                "display_name",
                "=",
                "$datasource"
              ],
              "type": "expression"
            }
          ]
        }
      ],
      "title": "Blocks Hit Ratio",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "$DataSourceVariable"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "bars",
            "fillOpacity": 100,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 0,
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".*"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "Show App List",
                    "url": "d/lt5HjUbZk/application-list?orgId=1&${__url_time_range}&${__all_variables}"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 15
      },
      "id": 18,
      "interval": "1m",
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "lastNotNull",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "10.2.3",
      "targets": [
        {
          "datasource": {
            "uid": "$DataSourceVariable"
          },
          "editorMode": "code",
          "format": "time_series",
          "group": [
            {
              "params": [
                "$__interval",
                "none"
              ],
              "type": "time"
            }
          ],
          "metricColumn": "datname",
          "rawQuery": true,
          "rawSql": "SELECT\n  $__timeGroupAlias(snapshot_time,$__interval),\n  display_name,hostname,datname,\n  max(numbackends) AS \"numbackends\"\nFROM spg_mon_pg.v_pg_stat_database\nWHERE\n  $__timeFilter(snapshot_time)\nGROUP BY 1,display_name,hostname,datname\nORDER BY 1,2",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "numbackends"
                ],
                "type": "column"
              },
              {
                "params": [
                  "max"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "numbackends"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "spg_mon_pg.v_pg_stat_database",
          "timeColumn": "snapshot_time",
          "timeColumnType": "timestamptz",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Applications",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "$DataSourceVariable"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 40,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "trx"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "Show App List",
                    "url": "d/lt5HjUbZk/application-list?orgId=1&${__url_time_range}&${__all_variables}"
                  },
                  {
                    "title": "Show Lock Waits",
                    "url": "d/jgTde8bZz/lockwait?orgId=1&${__url_time_range}&${__all_variables}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "transactions"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "purple",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "transactions"
            },
            "properties": [
              {
                "id": "custom.fillOpacity",
                "value": 0
              },
              {
                "id": "custom.lineWidth",
                "value": 2
              },
              {
                "id": "custom.lineStyle",
                "value": {
                  "dash": [
                    10,
                    10
                  ],
                  "fill": "dash"
                }
              },
              {
                "id": "custom.axisPlacement",
                "value": "right"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 24
      },
      "id": 19,
      "interval": "1m",
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "lastNotNull",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "10.2.3",
      "targets": [
        {
          "datasource": {
            "uid": "$DataSourceVariable"
          },
          "editorMode": "code",
          "format": "time_series",
          "group": [
            {
              "params": [
                "$__interval",
                "none"
              ],
              "type": "time"
            }
          ],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  $__timeGroupAlias(snapshot_time,$__interval),\n  display_name,hostname,datname,\n(CASE WHEN max(tup_inserted) >= lag(max(tup_inserted)) OVER (PARTITION BY display_name ORDER BY $__timeGroup(snapshot_time,$__interval)) THEN max(tup_inserted) - lag(max(tup_inserted)) OVER (PARTITION BY display_name ORDER BY $__timeGroup(snapshot_time,$__interval)) WHEN lag(max(tup_inserted)) OVER (PARTITION BY display_name ORDER BY $__timeGroup(snapshot_time,$__interval)) IS NULL THEN NULL ELSE max(tup_inserted) END)/extract(epoch from min(snapshot_time) - lag(min(snapshot_time)) OVER (PARTITION BY display_name ORDER BY $__timeGroup(snapshot_time,$__interval))) AS \"tup_inserted\"\nFROM spg_mon_pg.v_pg_stat_database\nWHERE\n  $__timeFilter(snapshot_time) \nGROUP BY 1,display_name,hostname,datname\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "xact_commit + xact_rollback"
                ],
                "type": "column"
              },
              {
                "params": [
                  "max"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "rate"
                ],
                "type": "window"
              },
              {
                "params": [
                  "trx"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "spg_mon_pg.v_pg_stat_database",
          "timeColumn": "snapshot_time",
          "timeColumnType": "timestamptz",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            },
            {
              "datatype": "text",
              "name": "",
              "params": [
                "display_name",
                "=",
                "$datasource"
              ],
              "type": "expression"
            }
          ]
        }
      ],
      "title": "TUP Inserted",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "$DataSourceVariable"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 40,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "trx"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "Show App List",
                    "url": "d/lt5HjUbZk/application-list?orgId=1&${__url_time_range}&${__all_variables}"
                  },
                  {
                    "title": "Show Lock Waits",
                    "url": "d/jgTde8bZz/lockwait?orgId=1&${__url_time_range}&${__all_variables}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "transactions"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "purple",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "transactions"
            },
            "properties": [
              {
                "id": "custom.fillOpacity",
                "value": 0
              },
              {
                "id": "custom.lineWidth",
                "value": 2
              },
              {
                "id": "custom.lineStyle",
                "value": {
                  "dash": [
                    10,
                    10
                  ],
                  "fill": "dash"
                }
              },
              {
                "id": "custom.axisPlacement",
                "value": "right"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 24
      },
      "id": 20,
      "interval": "1m",
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "lastNotNull",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "10.2.3",
      "targets": [
        {
          "datasource": {
            "uid": "$DataSourceVariable"
          },
          "editorMode": "code",
          "format": "time_series",
          "group": [
            {
              "params": [
                "$__interval",
                "none"
              ],
              "type": "time"
            }
          ],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  $__timeGroupAlias(snapshot_time,$__interval),\n  display_name,hostname,datname,\n(CASE WHEN max(tup_returned) >= lag(max(tup_returned)) OVER (PARTITION BY display_name ORDER BY $__timeGroup(snapshot_time,$__interval)) THEN max(tup_returned) - lag(max(tup_returned)) OVER (PARTITION BY display_name ORDER BY $__timeGroup(snapshot_time,$__interval)) WHEN lag(max(tup_returned)) OVER (PARTITION BY display_name ORDER BY $__timeGroup(snapshot_time,$__interval)) IS NULL THEN NULL ELSE max(tup_returned) END)/extract(epoch from min(snapshot_time) - lag(min(snapshot_time)) OVER (PARTITION BY display_name ORDER BY $__timeGroup(snapshot_time,$__interval))) AS \"tup_returned\"\nFROM spg_mon_pg.v_pg_stat_database\nWHERE\n  $__timeFilter(snapshot_time) \nGROUP BY 1,display_name,hostname,datname\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "xact_commit + xact_rollback"
                ],
                "type": "column"
              },
              {
                "params": [
                  "max"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "rate"
                ],
                "type": "window"
              },
              {
                "params": [
                  "trx"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "spg_mon_pg.v_pg_stat_database",
          "timeColumn": "snapshot_time",
          "timeColumnType": "timestamptz",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            },
            {
              "datatype": "text",
              "name": "",
              "params": [
                "display_name",
                "=",
                "$datasource"
              ],
              "type": "expression"
            }
          ]
        }
      ],
      "title": "TUP returned",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "$DataSourceVariable"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "bars",
            "fillOpacity": 100,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "snapshot_time"
            },
            "properties": [
              {
                "id": "unit",
                "value": "dateTimeAsIso"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "blocked_pid"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "Search for Pid in Application List",
                    "url": "d/lt5HjUbZk/application-list?orgId=&${__url_time_range}&${__all_variables}&var-applistpid=${__data.fields[blocked_pid]}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "blocking_pid"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "Search for Pid in Application List",
                    "url": "d/lt5HjUbZk/application-list?orgId=&${__url_time_range}&${__all_variables}&var-applistpid=${__data.fields[blocking_pid]}"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 33
      },
      "id": 21,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "10.4.10",
      "targets": [
        {
          "datasource": {
            "uid": "$DataSourceVariable"
          },
          "editorMode": "code",
          "format": "time_series",
          "group": [
            {
              "params": [
                "$__interval",
                "none"
              ],
              "type": "time"
            }
          ],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select\r\ntime_bucket_gapfill('$__interval',snapshot_time) as time,\r\nhostname,dbname,\r\ncount(distinct blocked_pid::text || blocking_pid::text) \r\nas num_lock_contentions\r\nfrom spg_mon_pg.v_pg_mon_lockwaits\r\nwhere\r\n  $__timeFilter(snapshot_time) and\r\n\tdatname is not null \r\n  group by 1,2,3",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "xact_commit + xact_rollback"
                ],
                "type": "column"
              },
              {
                "params": [
                  "max"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "rate"
                ],
                "type": "window"
              },
              {
                "params": [
                  "trx"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "spg_mon_pg.v_pg_stat_database",
          "timeColumn": "snapshot_time",
          "timeColumnType": "timestamptz",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            },
            {
              "datatype": "text",
              "name": "",
              "params": [
                "display_name",
                "=",
                "$datasource"
              ],
              "type": "expression"
            }
          ]
        }
      ],
      "title": "Lock Contentions",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "$DataSourceVariable"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "bars",
            "fillOpacity": 100,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "blocked_pid"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "Search for Pid in Application List",
                    "url": "d/lt5HjUbZk/application-list?orgId=&${__url_time_range}&${__all_variables}&var-applistpid=${__data.fields[blocked_pid]}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "blocking_pid"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "Search for Pid in Application List",
                    "url": "d/lt5HjUbZk/application-list?orgId=&${__url_time_range}&${__all_variables}&var-applistpid=${__data.fields[blocking_pid]}"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 33
      },
      "id": 22,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "10.4.10",
      "targets": [
        {
          "datasource": {
            "uid": "$DataSourceVariable"
          },
          "editorMode": "code",
          "format": "time_series",
          "group": [
            {
              "params": [
                "$__interval",
                "none"
              ],
              "type": "time"
            }
          ],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with delta as (\r\n  select snapshot_time,display_name,dbname,queryid,\r\n    case when calls > lag(calls) over (partition by display_name,dbname,queryid order by snapshot_time) then\r\n      mean_exec_time\r\n      else null\r\n    end as mean_exec_time\r\n  from spg_mon_pg.v_pg_stat_statements\r\n  where\r\n    $__timeFilter(snapshot_time) and\r\n    datname is not null \r\n    and mean_exec_time > 1000\r\n) select\r\ntime_bucket_gapfill('$__interval',snapshot_time) as time,\r\ndisplay_name,dbname,\r\nlocf(count(distinct queryid)) as num_querie_slow_1s \r\nfrom delta\r\nwhere $__timeFilter(snapshot_time)\r\ngroup by 1,2,3\r\norder by 1",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "xact_commit + xact_rollback"
                ],
                "type": "column"
              },
              {
                "params": [
                  "max"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "rate"
                ],
                "type": "window"
              },
              {
                "params": [
                  "trx"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "spg_mon_pg.v_pg_stat_database",
          "timeColumn": "snapshot_time",
          "timeColumnType": "timestamptz",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            },
            {
              "datatype": "text",
              "name": "",
              "params": [
                "display_name",
                "=",
                "$datasource"
              ],
              "type": "expression"
            }
          ]
        }
      ],
      "title": "Queries Slower 1s",
      "type": "timeseries"
    }
  ],
  "refresh": "1m",
  "schemaVersion": 39,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "pdb",
          "value": "ds-s4dbs-pdb"
        },
        "hide": 0,
        "includeAll": false,
        "label": "PDB",
        "multi": false,
        "name": "DataSourceVariable",
        "options": [],
        "query": "postgres",
        "queryValue": "",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      }
    ]
  },
  "time": {
    "from": "now-3h",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "",
  "title": "Workshop Result",
  "uid": "ae57n2em0em80c",
  "version": 15,
  "weekStart": ""
}