{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 1,
  "id": 1,
  "links": [],
  "panels": [
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "ee39dkekr6680a"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 0,
        "y": 0
      },
      "id": 1,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.3.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "ee39dkekr6680a"
          },
          "editorMode": "code",
          "format": "time_series",
          "hide": false,
          "rawQuery": true,
          "rawSql": "select $__timeGroup(\"time\", '$__interval') \nas time,\ndatname,\ndatid::text,\nmax(numbackends) as numbackends\nfrom observability.hist_pg_stat_database\nwhere $__timeFilter(\"time\")\ngroup by 1,2,3 order by 1",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Backends",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "ee39dkekr6680a"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ops"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 8,
        "y": 0
      },
      "id": 2,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "11.3.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "ee39dkekr6680a"
          },
          "editorMode": "code",
          "format": "time_series",
          "hide": true,
          "rawQuery": true,
          "rawSql": "select $__timeGroup(\"time\", $__interval) \nas time,\ndatname,\ndatid::text,\n(CASE \n  WHEN avg(blks_read) >= lag(avg(blks_read)) OVER (PARTITION by datname ORDER BY $__timeGroup(\"time\",$__interval)) \n    THEN avg(blks_read) - lag(avg(blks_read)) OVER (PARTITION by datname ORDER BY $__timeGroup(\"time\",$__interval)) \n  WHEN lag(avg(blks_read)) OVER (PARTITION by datname ORDER BY $__timeGroup(\"time\",$__interval)) IS NULL \n    THEN NULL \n  ELSE avg(blks_read) \nEND)\n/\nextract(epoch from min(\"time\") - lag(min(\"time\")) OVER (PARTITION by datname ORDER BY $__timeGroup(\"time\",$__interval))) AS \"blks_read_per_sec\"\nfrom observability.hist_pg_stat_database\nwhere $__timeFilter(\"time\")\ngroup by 1,2,3 order by 1",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "ee39dkekr6680a"
          },
          "editorMode": "code",
          "format": "time_series",
          "hide": false,
          "rawQuery": true,
          "rawSql": "SELECT\n  $__timeGroupAlias(\"time\",$__interval),\n  datname as metric,\n  (CASE WHEN avg(blks_read) >= lag(avg(blks_read)) OVER (PARTITION BY datname ORDER BY $__timeGroup(\"time\",$__interval)) THEN avg(blks_read) - lag(avg(blks_read)) OVER (PARTITION BY datname ORDER BY $__timeGroup(\"time\",$__interval)) WHEN lag(avg(blks_read)) OVER (PARTITION BY datname ORDER BY $__timeGroup(\"time\",$__interval)) IS NULL THEN NULL ELSE avg(blks_read) END)/extract(epoch from min(\"time\") - lag(min(\"time\")) OVER (PARTITION BY datname ORDER BY $__timeGroup(\"time\",$__interval))) AS \"blks_read\"\nFROM observability.hist_pg_stat_database\nWHERE\n  $__timeFilter(\"time\") AND\n  datname is not null\nGROUP BY 1,2\nORDER BY 1,2",
          "refId": "B",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "blks_read_per_sec",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "ee39dkekr6680a"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 0,
        "y": 8
      },
      "id": 4,
      "interval": "15m",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.3.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "ee39dkekr6680a"
          },
          "editorMode": "code",
          "format": "time_series",
          "hide": false,
          "rawQuery": true,
          "rawSql": "select $__timeGroup(\"time\", '$__interval') \nas time,\ndatname,\ndatid::text,\nfirst(numbackends,\"time\") as numbackends\nfrom observability.hist_pg_stat_database\nwhere $__timeFilter(\"time\")\ngroup by 1,2,3 order by 1",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Backends first (15m buckets)",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "ee39dkekr6680a"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ops"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 8,
        "y": 8
      },
      "id": 3,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "11.3.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "ee39dkekr6680a"
          },
          "editorMode": "code",
          "format": "time_series",
          "hide": true,
          "rawQuery": true,
          "rawSql": "select $__timeGroup(\"time\", $__interval) \nas time,\ndatname,\ndatid::text,\n(CASE \n  WHEN avg(blks_read) >= lag(avg(blks_read)) OVER (PARTITION by datname ORDER BY $__timeGroup(\"time\",$__interval)) \n    THEN avg(blks_read) - lag(avg(blks_read)) OVER (PARTITION by datname ORDER BY $__timeGroup(\"time\",$__interval)) \n  WHEN lag(avg(blks_read)) OVER (PARTITION by datname ORDER BY $__timeGroup(\"time\",$__interval)) IS NULL \n    THEN NULL \n  ELSE avg(blks_read) \nEND)\n/\nextract(epoch from min(\"time\") - lag(min(\"time\")) OVER (PARTITION by datname ORDER BY $__timeGroup(\"time\",$__interval))) AS \"blks_read_per_sec\"\nfrom observability.hist_pg_stat_database\nwhere $__timeFilter(\"time\")\ngroup by 1,2,3 order by 1",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "ee39dkekr6680a"
          },
          "editorMode": "code",
          "format": "time_series",
          "hide": false,
          "rawQuery": true,
          "rawSql": "SELECT\n  $__timeGroupAlias(\"time\",$__interval),\n  datname as metric,\n  (CASE WHEN avg(blks_read) >= lag(avg(blks_read)) OVER (PARTITION BY datname ORDER BY $__timeGroup(\"time\",$__interval)) THEN avg(blks_read) - lag(avg(blks_read)) OVER (PARTITION BY datname ORDER BY $__timeGroup(\"time\",$__interval)) WHEN lag(avg(blks_read)) OVER (PARTITION BY datname ORDER BY $__timeGroup(\"time\",$__interval)) IS NULL THEN NULL ELSE avg(blks_read) END)/extract(epoch from min(\"time\") - lag(min(\"time\")) OVER (PARTITION BY datname ORDER BY $__timeGroup(\"time\",$__interval))) AS \"blks_read\"\nFROM observability.hist_pg_stat_database\nWHERE\n  $__timeFilter(\"time\") AND\n  datname is not null\nGROUP BY 1,2\nORDER BY 1,2",
          "refId": "B",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "blks_read_per_sec",
      "type": "timeseries"
    }
  ],
  "preload": false,
  "schemaVersion": 40,
  "tags": [],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-1h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "New dashboard",
  "uid": "be39dulz2j280d",
  "version": 11,
  "weekStart": ""
}